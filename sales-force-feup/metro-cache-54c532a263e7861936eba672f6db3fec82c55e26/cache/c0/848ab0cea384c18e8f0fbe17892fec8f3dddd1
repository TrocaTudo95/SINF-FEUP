__d(function (global, _require, module, exports, _dependencyMap) {
  var _jsxFileName = "/home/trocatudo/sales-force-feup/sales-force-feup/node_modules/tcomb-form-native/lib/templates/bootstrap/datepicker.android.js";

  var _react = _require(_dependencyMap[0], "react");

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _require(_dependencyMap[1], "react-native");

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function datepicker(locals) {
    if (locals.hidden) {
      return null;
    }

    var stylesheet = locals.stylesheet;
    var formGroupStyle = stylesheet.formGroup.normal;
    var controlLabelStyle = stylesheet.controlLabel.normal;
    var datepickerStyle = stylesheet.datepicker.normal;
    var helpBlockStyle = stylesheet.helpBlock.normal;
    var errorBlockStyle = stylesheet.errorBlock;
    var dateValueStyle = stylesheet.dateValue.normal;

    if (locals.hasError) {
      formGroupStyle = stylesheet.formGroup.error;
      controlLabelStyle = stylesheet.controlLabel.error;
      datepickerStyle = stylesheet.datepicker.error;
      helpBlockStyle = stylesheet.helpBlock.error;
      dateValueStyle = stylesheet.dateValue.error;
    }

    var datePickerMode = locals.mode;

    if (datePickerMode !== "date" && datePickerMode !== "time" && datePickerMode !== "datetime") {
      throw new Error("Unrecognized date picker format " + datePickerMode);
    }

    var formattedValue = locals.value ? String(locals.value) : "";

    var background = _reactNative.TouchableNativeFeedback.SelectableBackground();

    var dialogMode = "default";
    var formattedDateValue = locals.value ? locals.value.toDateString() : "";
    var formattedTimeValue = locals.value ? locals.value.toTimeString() : "";

    if (locals.config) {
      if (locals.config.format && formattedValue) {
        formattedValue = locals.config.format(locals.value);
      } else if (!formattedValue) {
        formattedValue = locals.config.defaultValueText ? locals.config.defaultValueText : "Tap here to select a date";
      }

      if (locals.config.background) {
        background = locals.config.background;
      }

      if (locals.config.dialogMode) {
        dialogMode = locals.config.dialogMode;
      }

      if (locals.config.dateFormat && formattedDateValue) {
        formattedDateValue = locals.config.dateFormat(locals.value);
      } else if (!formattedDateValue) {
        formattedDateValue = locals.config.defaultValueText ? locals.config.defaultValueText : "Tap here to select a date";
      }

      if (locals.config.timeFormat && formattedTimeValue) {
        formattedTimeValue = locals.config.timeFormat(locals.value);
      } else if (!formattedTimeValue) {
        formattedTimeValue = locals.config.defaultValueText ? locals.config.defaultValueText : "Tap here to select a time";
      }
    }

    var label = locals.label ? _react2.default.createElement(
      _reactNative.Text,
      {
        style: controlLabelStyle,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 85
        }
      },
      locals.label
    ) : null;
    var help = locals.help ? _react2.default.createElement(
      _reactNative.Text,
      {
        style: helpBlockStyle,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 88
        }
      },
      locals.help
    ) : null;
    var error = locals.hasError && locals.error ? _react2.default.createElement(
      _reactNative.Text,
      {
        accessibilityLiveRegion: "polite",
        style: errorBlockStyle,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 92
        }
      },
      locals.error
    ) : null;
    var value = formattedValue ? _react2.default.createElement(
      _reactNative.Text,
      {
        style: dateValueStyle,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 97
        }
      },
      formattedValue
    ) : null;
    return _react2.default.createElement(
      _reactNative.View,
      {
        style: formGroupStyle,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 101
        }
      },
      datePickerMode === "datetime" ? _react2.default.createElement(
        _reactNative.View,
        {
          style: datepickerStyle,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 103
          }
        },
        label,
        _react2.default.createElement(
          _reactNative.TouchableNativeFeedback,
          {
            accessible: true,
            disabled: locals.disabled,
            ref: "input",
            background: background,
            onPress: function onPress() {
              var config = {
                date: locals.value || new Date(),
                mode: dialogMode
              };

              if (locals.minimumDate) {
                config.minDate = locals.minimumDate;
              }

              if (locals.maximumDate) {
                config.maxDate = locals.maximumDate;
              }

              _reactNative.DatePickerAndroid.open(config).then(function (date) {
                if (date.action !== _reactNative.DatePickerAndroid.dismissedAction) {
                  var newDate = new Date(locals.value);
                  newDate.setFullYear(date.year, date.month, date.day);
                  locals.onChange(newDate);
                }
              });

              if (typeof locals.onPress === "function") {
                locals.onPress();
              }
            },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 105
            }
          },
          _react2.default.createElement(
            _reactNative.View,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 133
              }
            },
            _react2.default.createElement(
              _reactNative.Text,
              {
                style: dateValueStyle,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 134
                }
              },
              formattedDateValue
            )
          )
        ),
        _react2.default.createElement(
          _reactNative.TouchableNativeFeedback,
          {
            accessible: true,
            disabled: locals.disabled,
            ref: "input",
            background: background,
            onPress: function onPress() {
              var now = new Date();
              var isDate = locals.value && locals.value instanceof Date;
              var setTime = {
                hour: isDate ? locals.value.getHours() : now.getHours(),
                minute: isDate ? locals.value.getMinutes() : now.getMinutes()
              };

              _reactNative.TimePickerAndroid.open({
                is24Hour: true,
                hour: setTime.hour,
                minute: setTime.minute
              }).then(function (time) {
                if (time.action !== _reactNative.TimePickerAndroid.dismissedAction) {
                  var newTime = new Date(locals.value);
                  newTime.setHours(time.hour);
                  newTime.setMinutes(time.minute);
                  locals.onChange(newTime);
                }
              });

              if (typeof locals.onPress === "function") {
                locals.onPress();
              }
            },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 137
            }
          },
          _react2.default.createElement(
            _reactNative.View,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 166
              }
            },
            _react2.default.createElement(
              _reactNative.Text,
              {
                style: dateValueStyle,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 167
                }
              },
              formattedTimeValue
            )
          )
        )
      ) : _react2.default.createElement(
        _reactNative.TouchableNativeFeedback,
        {
          accessible: true,
          disabled: locals.disabled,
          ref: "input",
          background: background,
          onPress: function onPress() {
            if (datePickerMode === "time") {
              var now = new Date();
              var isDate = locals.value && locals.value instanceof Date;
              var setTime = {
                hour: isDate ? locals.value.getHours() : now.getHours(),
                minute: isDate ? locals.value.getMinutes() : now.getMinutes()
              };

              _reactNative.TimePickerAndroid.open({
                is24Hour: true,
                hour: setTime.hour,
                minute: setTime.minute
              }).then(function (time) {
                if (time.action !== _reactNative.TimePickerAndroid.dismissedAction) {
                  var newTime = new Date();
                  newTime.setHours(time.hour);
                  newTime.setMinutes(time.minute);
                  locals.onChange(newTime);
                }
              });
            } else if (datePickerMode === "date") {
              var config = {
                date: locals.value || new Date(),
                mode: dialogMode
              };

              if (locals.minimumDate) {
                config.minDate = locals.minimumDate;
              }

              if (locals.maximumDate) {
                config.maxDate = locals.maximumDate;
              }

              _reactNative.DatePickerAndroid.open(config).then(function (date) {
                if (date.action !== _reactNative.DatePickerAndroid.dismissedAction) {
                  var newDate = new Date(date.year, date.month, date.day);
                  locals.onChange(newDate);
                }
              });
            }

            if (typeof locals.onPress === "function") {
              locals.onPress();
            }
          },
          __source: {
            fileName: _jsxFileName,
            lineNumber: 172
          }
        },
        _react2.default.createElement(
          _reactNative.View,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 220
            }
          },
          label,
          value
        )
      ),
      help,
      error
    );
  }

  module.exports = datepicker;
});